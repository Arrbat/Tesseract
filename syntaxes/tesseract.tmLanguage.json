{
    "scopeName": "source.tesseract",
    "name": "Tesseract",
    "patterns": [
        {
            "match": "\\b(let\\$|if\\$|elseif\\$|else|loop\\$|import\\$|func\\$|print)\\b",
            "name": "keyword.control.tesseract"
        },
        {
            "match": "::[a-zA-Z_][a-zA-Z0-9_]*",
            "name": "support.function.tesseract"
        },
        {
            "match": "\\b([0-9]+(\\.[0-9]+)?)\\b",
            "name": "constant.numeric.tesseract"
        },
        {
            "match": "(:=|=>|âŸ¶|\\+|-|\\*|/|%|>|<|>=|<=|==|!=)",
            "name": "keyword.operator.tesseract"
        },
        {
            "match": "\\b[a-zA-Z_$][a-zA-Z0-9_$]*\\b",
            "name": "variable.other.tesseract"
        },
        {
            "begin": "\"",
            "end": "\"",
            "name": "string.quoted.double.tesseract",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name": "constant.character.escape.tesseract"
                }
            ]
        },
        {
            "begin": "//",
            "end": "$",
            "name": "comment.line.tesseract"
        },
        {
            "begin": "/\\*",
            "end": "\\*/",
            "name": "comment.block.tesseract"
        },
        {
            "match": "\\$",
            "name": "punctuation.terminator.tesseract"
        },
        {
            "match": "[{}()\\[\\]]",
            "name": "meta.brace.tesseract"
        },
        {
            "match": ";",
            "name": "punctuation.terminator.statement.tesseract"
        }
    ],
    "repository": {
        "block": {
            "begin": "\\{",
            "end": "\\}",
            "name": "meta.block.tesseract",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        }
    }
}